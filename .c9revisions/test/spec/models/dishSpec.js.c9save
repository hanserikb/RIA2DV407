{"ts":1361093193580,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"define(['/src/models/dish.js'], function(Dish) {\n  describe('Dish Model', function() {\n    var dish;\n\n    // Create a new dish for each test\n    beforeEach(function() {\n      dish = new Dish();\n    });\n\n    // Dish object should be defined\n    it('should be defined', function() {\n      expect(dish).toBeDefined();\n    });\n\n    describe('Default values', function() {\n\n      // The default description should be set\n      it('should be set on description', function() {\n        expect(dish.get('description')).toEqual('No description');\n      });\n\n      it('should be set on cooking time', function() {\n        expect(dish.get('cookingTime')).toEqual('N/A');\n      });\n    });\n\n    describe('Validation', function() {\n\n      // Test if the validation of the name works\n      it('should not accept empty name', function() {\n        dish.set({name: ''});\n\n        dish.save();\n\n        expect(dish.isValid()).toBeFalsy();\n\n        expect(dish.validationError).toContain({\n          name: 'name',\n          message: 'You must enter a name for the dish'\n        });\n      });\n\n      // Test name length validation\n      it('should not accept names over 256 characters', function() {\n        var i, name = '';\n        for(i = 256; i >= 0; i--) {\n          name += 'a';\n        }\n        dish.set({name: name});\n\n        dish.save();\n\n        expect(dish.isValid()).toBeFalsy();\n\n        expect(dish.validationError).toContain({\n          name: 'name',\n          message: 'Maximum name length is 256 character'\n        });\n      });\n\n      // Test description length validation\n      it('should not accept description over 1024 characters', function() {\n        var i, string = '';\n        for(i = 1025; i >= 0; i--) {\n          string += 'a';\n        }\n        dish.set({description: string});\n\n        dish.save();\n\n        expect(dish.isValid()).toBeFalsy();\n\n        expect(dish.validationError).toContain({\n          name: 'description',\n          message: 'Maximum description length is 1024 characters'\n        });\n      });\n\n      // Test cooking time length validation\n      it('should not accept cooking time over 20 characters', function() {\n        var i, string = '';\n        for(i = 1025; i >= 0; i--) {\n          string += 'a';\n        }\n        dish.set({cookingTime: string});\n\n        dish.save();\n\n        expect(dish.isValid()).toBeFalsy();\n\n        expect(dish.validationError).toContain({\n          name: 'cookingTime',\n          message: 'Maximum cooking time length is 20 characters'\n        });\n      });\n    });\n  });\n});"]],"start1":0,"start2":0,"length1":0,"length2":2541}]],"length":2541}
{"contributors":["hans@bentlov.se"],"silentsave":false,"ts":1361095659962,"patch":[[{"diffs":[[0,"efine(['"],[1,"../../.."],[0,"/src/mod"]],"start1":1,"start2":1,"length1":16,"length2":24}]],"length":2549,"saved":false}
